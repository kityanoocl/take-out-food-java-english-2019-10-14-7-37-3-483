import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private ItemRepository itemRepository;
    private SalesPromotionRepository salesPromotionRepository;

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }

    public String bestCharge(List<String> inputs) {
        //TODO: write code here
        String ans = "============= Order details =============\n";
        double total = 0;
        Map<Item, Integer> purchase = new HashMap<Item, Integer>();
        for (String s : inputs)
        {
            String o = "";
            double cost = 0;
            int i = s.indexOf('x');
            String l = s.substring(0, i - 1);
            String r = s.substring(i + 2);
            for (Item item : itemRepository.findAll())
            {
                if (l.equals(item.getId()))
                {
                    purchase.put(item, Integer.parseInt(r));
                    cost = item.getPrice() * Double.parseDouble(r);
                    total += cost;
                    o = item.getName() + " x " + r + " = " + (int)cost + " yuan\n";
                    ans += o;
                    break;
                }
            }
        }
        ans +=  "-----------------------------------\n";
        double saved = 0;
        String promotion = "";
        for (SalesPromotion sp : salesPromotionRepository.findAll())
        {
            if (sp.getType().contains("BUY"))
            {
                if (total >= 30)
                {
                    saved = 6;
                    promotion = "Promotion used:\n" + sp.getDisplayName() +
                            "，";
                }
            }
            else
            {
                String t = "Promotion used:\n" + sp.getDisplayName()
                        + " (";
                double ts = 0;
                for (String s : sp.getRelatedItems())
                {
                    for (Item i : purchase.keySet())
                    {
                        if (i.getId().equals(s))
                        {
                            if (t.charAt(t.length() - 1) != '(')
                            {
                                t += ", ";
                            }
                            t += i.getName();
                            ts += purchase.get(i) * i.getPrice() / 2;
                        }
                    }
                }
                t += "), ";
                if (saved < ts)
                {
                    promotion = t;
                    saved = ts;
                }
            }
        }

        if (saved > 0)
        {
            promotion += "saving " + (int)saved + " yuan\n" +
            "-----------------------------------\n";
        }

        promotion += "Total：" + (int)(total - saved) +" yuan\n" +
                "===================================";
        return ans + promotion;
    }
}
